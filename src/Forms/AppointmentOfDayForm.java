/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.Appointment;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import Classes.*;
import javax.swing.JList;

/**
 * A form which presents all Appointment of a Certain Day
 * @author patricia
 */
public class AppointmentOfDayForm extends javax.swing.JPanel {

    ArrayList<Appointment> DaysEvents = new ArrayList<>();
    DefaultListModel modelDaysEvents = new DefaultListModel();
    User user = null;

    /**
     * Creates new form AppointmentOfDay
     */
    AppointmentOfDayForm(ArrayList<Appointment> EventsofTheDay) {
        initComponents();
        setContent(EventsofTheDay);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        List_DaysEvents = new javax.swing.JList<>();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(196, 209, 248));

        jLabel1.setFont(new java.awt.Font("Apple Color Emoji", 1, 24));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Appointments of the Day: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(196, 209, 248));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );

        add(jPanel2, java.awt.BorderLayout.PAGE_END);

        List_DaysEvents.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        List_DaysEvents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        List_DaysEvents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                List_DaysEventsMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(List_DaysEvents);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Open an {@link AppointmentForm} containing the data of the selected
     * Appointment
     * @param evt 
     */
    private void List_DaysEventsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List_DaysEventsMousePressed
        int row = List_DaysEvents.getSelectedIndex();
        User user = MainFrame.getObject().getUser();
        Appointment selectedEvent = getSelectedEvent(row);
        if (evt.getClickCount() > 1) {
            if (user.equals(selectedEvent.getHost())) {
                
            }
                
            }
        
    }//GEN-LAST:event_List_DaysEventsMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> List_DaysEvents;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    /**
     * sets the content of the {@link JList} of the form with the names of the
     * Appointment(s)
     * @param DaysEvents 
     */
    private void setContent(ArrayList<Appointment> DaysEvents) {
        setDaysEvents(DaysEvents);
        if (!this.DaysEvents.isEmpty()) {
            this.DaysEvents.stream().forEach(Appointment -> {       
                modelDaysEvents.addElement(Appointment.getName());
            });
        } else {
            modelDaysEvents.removeAllElements();
        }
        List_DaysEvents.setModel(modelDaysEvents);
    }
    /**
     * returns the {@link Appointment} which is selected within the
     * {@link JList}
     * @param row
     * @return {@link Appointment}
     */
    private Appointment getSelectedEvent(int row) {
        return null;
    }
    /**
     * Sets the the {@link ArrayList} of {@link Appointment} of this form 
     * respectively to the chosen Date
     * @param eventsOfTheDay 
     */
    private void setDaysEvents(ArrayList<Appointment> eventsOfTheDay) {     
        this.DaysEvents = eventsOfTheDay;
    }
}
